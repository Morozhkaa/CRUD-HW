{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A service that stores information about balances on user accounts.",
        "title": "Billing service API",
        "contact": {
            "name": "Olga Shishkina",
            "email": "olenka.shishkina.02@mail.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/balance": {
            "get": {
                "description": "Returns the user's balance.",
                "tags": [
                    "balance"
                ],
                "summary": "Get balance",
                "operationId": "getBalance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization header: 'Bearer \u003caccess_token\u003e;\u003crefresh_token\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user's balance has been successfully received.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Missing required Authorization header.",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User account not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error / Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates user balance.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Update balance",
                "operationId": "updateBalance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization header: 'Bearer \u003caccess_token\u003e;\u003crefresh_token\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "amount (may be negative)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBalance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user's balance information has been successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Not enough funds to write off / required Authorization header or 'amount' field is missing.",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User account not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error / Internal Server Error.",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Check service status",
                "operationId": "health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "string"
                }
            }
        },
        "models.UpdateBalance": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": 1000
                }
            }
        }
    }
}